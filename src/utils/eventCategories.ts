import { EventType, EventTypeConfig } from '../types';

export const EVENT_TYPES: EventTypeConfig[] = [
  {
    type: 'all',
    label: 'Tous les Ã©vÃ©nements',
    code: '',
    color: '#6c757d',
    icon: 'ðŸ“…'
  },
  {
    type: 'colloque',
    label: 'Colloques',
    code: 'COL',
    color: '#003d7a',
    icon: 'ðŸŽ“'
  },
  {
    type: 'these',
    label: 'ThÃ¨ses',
    code: 'THE',
    color: '#0066cc',
    icon: 'ðŸ“š'
  },
  {
    type: 'seminaire',
    label: 'SÃ©minaires',
    code: 'SEM',
    color: '#4a90e2',
    icon: 'ðŸ’¬'
  },
  {
    type: 'other',
    label: 'Autres Ã©vÃ©nements',
    code: '',
    color: '#27ae60',
    icon: 'ðŸ“Œ'
  }
];

export const detectEventType = (title: string, description?: string): EventType => {
  const text = `${title} ${description || ''}`.toLowerCase();
  
  // DÃ©tecter par codes entre crochets (prioritÃ© haute)
  if (/\[col\]/i.test(title)) {
    return 'colloque';
  }
  
  if (/\[the\]/i.test(title)) {
    return 'these';
  }
  
  if (/\[sem\]/i.test(title)) {
    return 'seminaire';
  }
  
  // DÃ©tecter par mots-clÃ©s dans le titre et la description
  if (/colloque|symposium|congrÃ¨s|confÃ©rence/i.test(text)) {
    return 'colloque';
  }
  
  if (/thÃ¨se|thesis|dÃ©fense|defense|phd|doctorat|doctoral/i.test(text)) {
    return 'these';
  }
  
  if (/sÃ©minaire|seminar|formation|workshop|atelier/i.test(text)) {
    return 'seminaire';
  }
  
  return 'other';
};

export const getEventTypeConfig = (type: EventType): EventTypeConfig => {
  return EVENT_TYPES.find(config => config.type === type) || EVENT_TYPES[EVENT_TYPES.length - 1];
};

export const getEventTypeColor = (title: string, description?: string): string => {
  const type = detectEventType(title, description);
  return getEventTypeConfig(type).color;
};